apiVersion: apps/v1
kind: Deployment
metadata:
  name: qubool-kallyanam-auth
  namespace: qubool-kallyanam
  labels:
    app.kubernetes.io/name: qubool-kallyanam-auth
    app.kubernetes.io/part-of: qubool-kallyanam
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels: { app.kubernetes.io/name: qubool-kallyanam-auth }
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qubool-kallyanam-auth
        app.kubernetes.io/part-of: qubool-kallyanam
    spec:
      terminationGracePeriodSeconds: 15
      containers:
        - name: qubool-kallyanam-auth
          image: asia-south1-docker.pkg.dev/qubool-kallyanam/qubool-kallyanam-docker/auth:latest
          imagePullPolicy: IfNotPresent
          ports: [{ name: grpc, containerPort: 50051 }]
          envFrom:
            - configMapRef: { name: auth-config }
            - secretRef: { name: auth-secret }
          env:
            # Port from shared source
            - name: AUTH_GRPC_PORT
              valueFrom: { configMapKeyRef: { name: shared-config, key: AUTH_GRPC_PORT } }
            - name: AUTH_ENVIRONMENT
              valueFrom: { configMapKeyRef: { name: shared-config, key: ENVIRONMENT } }

            # Postgres 
            - name: AUTH_POSTGRES_HOST
              valueFrom: { configMapKeyRef: { name: shared-config, key: POSTGRES_HOST } }
            - name: AUTH_POSTGRES_PORT
              valueFrom: { configMapKeyRef: { name: shared-config, key: POSTGRES_PORT } }
            - name: AUTH_POSTGRES_USER
              valueFrom: { configMapKeyRef: { name: shared-config, key: POSTGRES_USER } }
            - name: AUTH_POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: common-secret, key: POSTGRES_PASSWORD } }
            - name: AUTH_POSTGRES_SSLMODE
              valueFrom: { configMapKeyRef: { name: shared-config, key: POSTGRES_SSLMODE } }
            - name: AUTH_POSTGRES_TIMEZONE
              valueFrom: { configMapKeyRef: { name: shared-config, key: POSTGRES_TIMEZONE } }

            # Redis 
            - name: AUTH_REDIS_REDIS_URL
              valueFrom: { secretKeyRef: { name: common-secret, key: REDIS_URL } }
            - name: AUTH_REDIS_HOST
              valueFrom: { configMapKeyRef: { name: shared-config, key: REDIS_HOST } }
            - name: AUTH_REDIS_PORT
              valueFrom: { configMapKeyRef: { name: shared-config, key: REDIS_PORT } }
            # Messaging
            - name: AUTH_RABBITMQ_EXCHANGE_NAME
              valueFrom: { configMapKeyRef: { name: shared-config, key: RABBITMQ_EXCHANGE_NAME } }
            - name: AUTH_RABBITMQ_DSN
              valueFrom: { secretKeyRef: { name: common-secret, key: RABBITMQ_DSN } }
            - name: AUTH_PUBSUB_PROJECT_ID
              valueFrom: { configMapKeyRef: { name: shared-config, key: PUBSUB_PROJECT_ID } }

            # Shared JWT
            - name: AUTH_AUTH_JWT_SECRET_KEY
              valueFrom: { secretKeyRef: { name: common-secret, key: JWT_SECRET } }
            - name: AUTH_AUTH_JWT_ACCESS_TOKEN_MINUTES
              valueFrom: { configMapKeyRef: { name: shared-config, key: JWT_ACCESS_TOKEN_MINUTES } }
            - name: AUTH_AUTH_JWT_REFRESH_TOKEN_DAYS
              valueFrom: { configMapKeyRef: { name: shared-config, key: JWT_REFRESH_TOKEN_DAYS } }
            - name: AUTH_AUTH_JWT_ISSUER
              valueFrom: { configMapKeyRef: { name: shared-config, key: JWT_ISSUER } }
          readinessProbe:
            grpc: { port: 50051 }
            initialDelaySeconds: 5
          livenessProbe:
            grpc: { port: 50051 }
            initialDelaySeconds: 10
          resources:
            requests: { cpu: 100m, memory: 128Mi }
            limits: { cpu: 500m, memory: 256Mi }