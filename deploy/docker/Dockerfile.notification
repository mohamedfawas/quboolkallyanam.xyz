# Build stage
FROM golang:1.23-alpine AS builder
ARG TARGETOS=linux
ARG TARGETARCH=amd64

RUN apk add --no-cache git ca-certificates tzdata
WORKDIR /src/services/notification

# Copy module files first for better caching
COPY services/notification/go.mod services/notification/go.sum ./

# Copy local module replacements used by notification (via go.mod replace)
COPY pkg /src/pkg

# Download dependencies
RUN go mod download

# Copy the notification service source
COPY services/notification /src/services/notification

# Build a statically linked binary
RUN CGO_ENABLED=0 GOOS=$TARGETOS GOARCH=$TARGETARCH \
	go build -trimpath -ldflags="-s -w" -o /out/notification ./cmd

# Runtime stage
FROM gcr.io/distroless/base-debian12:nonroot

WORKDIR /app
COPY --from=builder /out/notification /app/notification

# Optional: default config path (viper won't fail if missing)
ENV CONFIG_PATH=/etc/qubool/notification/config.yaml

USER nonroot:nonroot
ENTRYPOINT ["/app/notification"]